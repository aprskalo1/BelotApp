@model BelotApp.ViewModels.GameResultsVM

@{
    ViewData["Title"] = "Edit";
}

<div class="d-flex flex-wrap flex-column justify-content-center align-content-center">
    <div class="title">Novi rezultat</div>
    <hr />
    <div class="row input-form">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="TeamOneResult" class="control-label">@ViewBag.TeamOneName</label>
                <input asp-for="TeamOneResult" class="form-control border-0 custom-shadow bg-white mb-2" />
                <span asp-validation-for="TeamOneResult" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TeamTwoResult" class="control-label">@ViewBag.TeamTwoName</label>
                <input asp-for="TeamTwoResult" class="form-control border-0 custom-shadow bg-white mb-2" />
                <span asp-validation-for="TeamTwoResult" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Combination" class="control-label"></label>
                <input asp-for="Combination" class="form-control border-0 custom-shadow bg-white mb-2" value='@(Model.Combination == 0 ? "" : Model.Combination.ToString())' />
                <span asp-validation-for="Combination" class="text-danger"></span>
            </div>
            <div class="form-group" id="combinationCallDiv">
                <label asp-for="CombinationCall" class="control-label"></label>
                <select asp-for="CombinationCall" class="form-control border-0 custom-shadow bg-white mb-2">
                    <option value="@ViewBag.TeamOneName">@ViewBag.TeamOneName</option>
                    <option value="@ViewBag.TeamTwoName">@ViewBag.TeamTwoName</option>
                </select>
                <span asp-validation-for="CombinationCall" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TrumpCall" class="control-label"></label>
                <select asp-for="TrumpCall" class="form-control border-0 custom-shadow bg-white mb-2">
                    <option value="@ViewBag.TeamOneName">@ViewBag.TeamOneName</option>
                    <option value="@ViewBag.TeamTwoName">@ViewBag.TeamTwoName</option>
                </select>
                <span asp-validation-for="TrumpCall" class="text-danger"></span>
            </div>
            <div class="form-group mt-2">
                <input type="submit" value="Spremi" class="btn btn-primary" />
                <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteConfirmationModal">
                    Obriši
                </button>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                Želite li obrisati rezultat?
            </div>
            <div class="modal-footer">
                <form asp-action="Delete">
                    <input type="hidden" asp-for="Id" />
                    <input type="submit" value="Obriši" class="btn btn-danger" />
                </form>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zatvori</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            if ($("#Combination").val() == "") {
                $("#combinationCallDiv").hide();
            } else {
                $("#combinationCallDiv").show();
            }

            $("#Combination").keyup(function () {
                if ($("#Combination").val() == "") {
                    $("#combinationCallDiv").slideUp();
                }
                else {
                    $("#combinationCallDiv").slideDown();
                }
            });

            function calculateOppositeField(inputField, oppositeField) {
                var userInput = parseInt($(inputField).val()) || 0;
                var calculatedValue = Math.max(162 - userInput, 0);
                $(oppositeField).val(calculatedValue);
            }

            $('#TeamOneResult').on('input', function () {
                calculateOppositeField('#TeamOneResult', '#TeamTwoResult');
            });

            $('#TeamTwoResult').on('input', function () {
                calculateOppositeField('#TeamTwoResult', '#TeamOneResult');
            });
        });
    </script>
}
